<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="10" total="50" passed="28" failed="12" skipped="0">
  <reporter-output>
    <line>
      <![CDATA[Extent Report DirectoryC:\Users\lenis\IdeaProjects\WebAutomationFrameWorkSelenium_Team2\TargetEcommerce\target\surefire-reports\html]]>
    </line>
  </reporter-output>
  <suite started-at="2020-08-31T11:59:40 EDT" name="TestSuite" finished-at="2020-08-31T12:09:13 EDT" duration-ms="572904">
    <groups>
    </groups>
    <test started-at="2020-08-31T11:59:40 EDT" name="Target Home" finished-at="2020-08-31T12:09:13 EDT" duration-ms="572904">
      <class name="homefunctiontest.HomeFunctionalTest">
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:homefunctiontest.HomeFunctionalTest@cad498c]" started-at="2020-08-31T12:01:38 EDT" name="setUp" finished-at="2020-08-31T12:01:42 EDT" duration-ms="4871" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[84]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.target.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:homefunctiontest.HomeFunctionalTest@cad498c]" started-at="2020-08-31T12:01:42 EDT" name="startExtent" finished-at="2020-08-31T12:01:42 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void homefunctiontest.HomeFunctionalTest.testCartSignIn() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:homefunctiontest.HomeFunctionalTest@cad498c]" started-at="2020-08-31T12:01:42 EDT" name="getInit" finished-at="2020-08-31T12:01:42 EDT" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method signature="testCartSignIn()[pri:0, instance:homefunctiontest.HomeFunctionalTest@cad498c]" started-at="2020-08-31T12:01:42 EDT" name="testCartSignIn" finished-at="2020-08-31T12:01:52 EDT" duration-ms="9242" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCartSignIn -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:homefunctiontest.HomeFunctionalTest@cad498c]" started-at="2020-08-31T12:01:52 EDT" name="afterEachTestMethod" finished-at="2020-08-31T12:01:53 EDT" duration-ms="1144" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testCartSignIn status=SUCCESS method=HomeFunctionalTest.testCartSignIn()[pri:0, instance:homefunctiontest.HomeFunctionalTest@cad498c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:homefunctiontest.HomeFunctionalTest@cad498c]" started-at="2020-08-31T12:01:53 EDT" name="cleanUp" finished-at="2020-08-31T12:01:53 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:homefunctiontest.HomeFunctionalTest@cad498c]" started-at="2020-08-31T12:01:53 EDT" name="setUp" finished-at="2020-08-31T12:01:59 EDT" duration-ms="6069" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[84]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.target.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:homefunctiontest.HomeFunctionalTest@cad498c]" started-at="2020-08-31T12:01:59 EDT" name="startExtent" finished-at="2020-08-31T12:01:59 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void homefunctiontest.HomeFunctionalTest.testCartSignInNegative() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:homefunctiontest.HomeFunctionalTest@cad498c]" started-at="2020-08-31T12:01:59 EDT" name="getInit" finished-at="2020-08-31T12:01:59 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method signature="testCartSignInNegative()[pri:0, instance:homefunctiontest.HomeFunctionalTest@cad498c]" started-at="2020-08-31T12:01:59 EDT" name="testCartSignInNegative" finished-at="2020-08-31T12:02:08 EDT" duration-ms="8876" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCartSignInNegative -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:homefunctiontest.HomeFunctionalTest@cad498c]" started-at="2020-08-31T12:02:08 EDT" name="afterEachTestMethod" finished-at="2020-08-31T12:02:09 EDT" duration-ms="745" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testCartSignInNegative status=SUCCESS method=HomeFunctionalTest.testCartSignInNegative()[pri:0, instance:homefunctiontest.HomeFunctionalTest@cad498c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:homefunctiontest.HomeFunctionalTest@cad498c]" started-at="2020-08-31T12:02:09 EDT" name="cleanUp" finished-at="2020-08-31T12:02:09 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:homefunctiontest.HomeFunctionalTest@cad498c]" started-at="2020-08-31T12:02:09 EDT" name="setUp" finished-at="2020-08-31T12:02:13 EDT" duration-ms="4865" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[84]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.target.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:homefunctiontest.HomeFunctionalTest@cad498c]" started-at="2020-08-31T12:02:13 EDT" name="startExtent" finished-at="2020-08-31T12:02:13 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void homefunctiontest.HomeFunctionalTest.testShoppingCart() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:homefunctiontest.HomeFunctionalTest@cad498c]" started-at="2020-08-31T12:02:13 EDT" name="getInit" finished-at="2020-08-31T12:02:13 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method signature="testShoppingCart()[pri:0, instance:homefunctiontest.HomeFunctionalTest@cad498c]" started-at="2020-08-31T12:02:13 EDT" name="testShoppingCart" finished-at="2020-08-31T12:02:30 EDT" duration-ms="16700" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testShoppingCart -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:homefunctiontest.HomeFunctionalTest@cad498c]" started-at="2020-08-31T12:02:30 EDT" name="afterEachTestMethod" finished-at="2020-08-31T12:02:31 EDT" duration-ms="769" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testShoppingCart status=SUCCESS method=HomeFunctionalTest.testShoppingCart()[pri:0, instance:homefunctiontest.HomeFunctionalTest@cad498c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:homefunctiontest.HomeFunctionalTest@cad498c]" started-at="2020-08-31T12:02:31 EDT" name="cleanUp" finished-at="2020-08-31T12:02:31 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:homefunctiontest.HomeFunctionalTest@cad498c]" started-at="2020-08-31T12:02:31 EDT" name="setUp" finished-at="2020-08-31T12:02:36 EDT" duration-ms="4916" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[84]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.target.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:homefunctiontest.HomeFunctionalTest@cad498c]" started-at="2020-08-31T12:02:36 EDT" name="startExtent" finished-at="2020-08-31T12:02:36 EDT" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void homefunctiontest.HomeFunctionalTest.testShoppingCartNegative() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:homefunctiontest.HomeFunctionalTest@cad498c]" started-at="2020-08-31T12:02:36 EDT" name="getInit" finished-at="2020-08-31T12:02:36 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method signature="testShoppingCartNegative()[pri:0, instance:homefunctiontest.HomeFunctionalTest@cad498c]" started-at="2020-08-31T12:02:36 EDT" name="testShoppingCartNegative" finished-at="2020-08-31T12:02:49 EDT" duration-ms="13694" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testShoppingCartNegative -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:homefunctiontest.HomeFunctionalTest@cad498c]" started-at="2020-08-31T12:02:49 EDT" name="afterEachTestMethod" finished-at="2020-08-31T12:02:50 EDT" duration-ms="735" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testShoppingCartNegative status=SUCCESS method=HomeFunctionalTest.testShoppingCartNegative()[pri:0, instance:homefunctiontest.HomeFunctionalTest@cad498c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:homefunctiontest.HomeFunctionalTest@cad498c]" started-at="2020-08-31T12:02:50 EDT" name="setUp" finished-at="2020-08-31T12:02:56 EDT" duration-ms="6057" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[84]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.target.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:homefunctiontest.HomeFunctionalTest@cad498c]" started-at="2020-08-31T12:02:50 EDT" name="cleanUp" finished-at="2020-08-31T12:02:50 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:homefunctiontest.HomeFunctionalTest@cad498c]" started-at="2020-08-31T12:02:56 EDT" name="startExtent" finished-at="2020-08-31T12:02:56 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void homefunctiontest.HomeFunctionalTest.testSignInButton() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:homefunctiontest.HomeFunctionalTest@cad498c]" started-at="2020-08-31T12:02:56 EDT" name="getInit" finished-at="2020-08-31T12:02:56 EDT" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method signature="testSignInButton()[pri:0, instance:homefunctiontest.HomeFunctionalTest@cad498c]" started-at="2020-08-31T12:02:56 EDT" name="testSignInButton" finished-at="2020-08-31T12:03:05 EDT" duration-ms="8458" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSignInButton -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:homefunctiontest.HomeFunctionalTest@cad498c]" started-at="2020-08-31T12:03:05 EDT" name="afterEachTestMethod" finished-at="2020-08-31T12:03:05 EDT" duration-ms="757" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testSignInButton status=SUCCESS method=HomeFunctionalTest.testSignInButton()[pri:0, instance:homefunctiontest.HomeFunctionalTest@cad498c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:homefunctiontest.HomeFunctionalTest@cad498c]" started-at="2020-08-31T12:03:05 EDT" name="cleanUp" finished-at="2020-08-31T12:03:05 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:homefunctiontest.HomeFunctionalTest@cad498c]" started-at="2020-08-31T12:03:05 EDT" name="setUp" finished-at="2020-08-31T12:03:12 EDT" duration-ms="6080" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[84]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.target.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:homefunctiontest.HomeFunctionalTest@cad498c]" started-at="2020-08-31T12:03:12 EDT" name="startExtent" finished-at="2020-08-31T12:03:12 EDT" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void homefunctiontest.HomeFunctionalTest.testUseLogIn() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:homefunctiontest.HomeFunctionalTest@cad498c]" started-at="2020-08-31T12:03:12 EDT" name="getInit" finished-at="2020-08-31T12:03:12 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method signature="testUseLogIn()[pri:0, instance:homefunctiontest.HomeFunctionalTest@cad498c]" started-at="2020-08-31T12:03:12 EDT" name="testUseLogIn" finished-at="2020-08-31T12:03:21 EDT" duration-ms="9181" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUseLogIn -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:homefunctiontest.HomeFunctionalTest@cad498c]" started-at="2020-08-31T12:03:21 EDT" name="afterEachTestMethod" finished-at="2020-08-31T12:03:21 EDT" duration-ms="736" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testUseLogIn status=SUCCESS method=HomeFunctionalTest.testUseLogIn()[pri:0, instance:homefunctiontest.HomeFunctionalTest@cad498c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:homefunctiontest.HomeFunctionalTest@cad498c]" started-at="2020-08-31T12:03:21 EDT" name="cleanUp" finished-at="2020-08-31T12:03:21 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
      </class> <!-- homefunctiontest.HomeFunctionalTest -->
      <class name="testredcard.RedCardPageTest">
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testredcard.RedCardPageTest@b62d79]" started-at="2020-08-31T12:07:06 EDT" name="setUp" finished-at="2020-08-31T12:07:12 EDT" duration-ms="5007" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[84]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.target.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testredcard.RedCardPageTest@b62d79]" started-at="2020-08-31T12:07:12 EDT" name="startExtent" finished-at="2020-08-31T12:07:12 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testredcard.RedCardPageTest.testAtHomeLearning() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:testredcard.RedCardPageTest@b62d79]" started-at="2020-08-31T12:07:12 EDT" name="getInit" finished-at="2020-08-31T12:07:12 EDT" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method signature="testAtHomeLearning()[pri:0, instance:testredcard.RedCardPageTest@b62d79]" started-at="2020-08-31T12:07:12 EDT" name="testAtHomeLearning" finished-at="2020-08-31T12:07:28 EDT" duration-ms="16240" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//div[contains(text(),'Colored Pencils')]"}
  (Session info: chrome=84.0.4147.135)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'LAPTOP-6QSDTELI', ip: '192.168.1.185', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.8'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 84.0.4147.135, chrome: {chromedriverVersion: 84.0.4147.30 (48b3e868b4cc0..., userDataDir: C:\Users\lenis\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:58412}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}
Session ID: 7dd8db470411d2d6e9dff82163080642
*** Element info: {Using=xpath, value=//div[contains(text(),'Colored Pencils')]}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//div[contains(text(),'Colored Pencils')]"}
  (Session info: chrome=84.0.4147.135)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'LAPTOP-6QSDTELI', ip: '192.168.1.185', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.8'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 84.0.4147.135, chrome: {chromedriverVersion: 84.0.4147.30 (48b3e868b4cc0..., userDataDir: C:\Users\lenis\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:58412}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}
Session ID: 7dd8db470411d2d6e9dff82163080642
*** Element info: {Using=xpath, value=//div[contains(text(),'Colored Pencils')]}
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:428)
at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at com.sun.proxy.$Proxy14.click(Unknown Source)
at redcard.RedCardPage.atHomeLearning(RedCardPage.java:88)
at testredcard.RedCardPageTest.testAtHomeLearning(RedCardPageTest.java:39)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAtHomeLearning -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testredcard.RedCardPageTest@b62d79]" started-at="2020-08-31T12:07:28 EDT" name="afterEachTestMethod" finished-at="2020-08-31T12:07:29 EDT" duration-ms="1248" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testAtHomeLearning status=FAILURE method=RedCardPageTest.testAtHomeLearning()[pri:0, instance:testredcard.RedCardPageTest@b62d79] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testredcard.RedCardPageTest@b62d79]" started-at="2020-08-31T12:07:29 EDT" name="setUp" finished-at="2020-08-31T12:07:34 EDT" duration-ms="5045" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[84]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.target.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:testredcard.RedCardPageTest@b62d79]" started-at="2020-08-31T12:07:29 EDT" name="cleanUp" finished-at="2020-08-31T12:07:29 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testredcard.RedCardPageTest@b62d79]" started-at="2020-08-31T12:07:34 EDT" name="startExtent" finished-at="2020-08-31T12:07:34 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testredcard.RedCardPageTest.testMoreDetailsbutton() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:testredcard.RedCardPageTest@b62d79]" started-at="2020-08-31T12:07:34 EDT" name="getInit" finished-at="2020-08-31T12:07:34 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method signature="testMoreDetailsbutton()[pri:0, instance:testredcard.RedCardPageTest@b62d79]" started-at="2020-08-31T12:07:34 EDT" name="testMoreDetailsbutton" finished-at="2020-08-31T12:07:51 EDT" duration-ms="17162" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//h2[contains(text(),'About this item')]"}
  (Session info: chrome=84.0.4147.135)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'LAPTOP-6QSDTELI', ip: '192.168.1.185', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.8'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 84.0.4147.135, chrome: {chromedriverVersion: 84.0.4147.30 (48b3e868b4cc0..., userDataDir: C:\Users\lenis\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:58489}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}
Session ID: 4481ec866f6129054bbd9c7b52ccf819
*** Element info: {Using=xpath, value=//h2[contains(text(),'About this item')]}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//h2[contains(text(),'About this item')]"}
  (Session info: chrome=84.0.4147.135)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'LAPTOP-6QSDTELI', ip: '192.168.1.185', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.8'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 84.0.4147.135, chrome: {chromedriverVersion: 84.0.4147.30 (48b3e868b4cc0..., userDataDir: C:\Users\lenis\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:58489}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}
Session ID: 4481ec866f6129054bbd9c7b52ccf819
*** Element info: {Using=xpath, value=//h2[contains(text(),'About this item')]}
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:428)
at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at com.sun.proxy.$Proxy14.getText(Unknown Source)
at redcard.RedCardPage.validatemoreDetailsbutton(RedCardPage.java:79)
at testredcard.RedCardPageTest.testMoreDetailsbutton(RedCardPageTest.java:35)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMoreDetailsbutton -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testredcard.RedCardPageTest@b62d79]" started-at="2020-08-31T12:07:51 EDT" name="afterEachTestMethod" finished-at="2020-08-31T12:07:52 EDT" duration-ms="1134" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testMoreDetailsbutton status=FAILURE method=RedCardPageTest.testMoreDetailsbutton()[pri:0, instance:testredcard.RedCardPageTest@b62d79] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:testredcard.RedCardPageTest@b62d79]" started-at="2020-08-31T12:07:52 EDT" name="cleanUp" finished-at="2020-08-31T12:07:52 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testredcard.RedCardPageTest@b62d79]" started-at="2020-08-31T12:07:52 EDT" name="setUp" finished-at="2020-08-31T12:07:58 EDT" duration-ms="5996" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[84]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.target.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testredcard.RedCardPageTest@b62d79]" started-at="2020-08-31T12:07:58 EDT" name="startExtent" finished-at="2020-08-31T12:07:58 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testredcard.RedCardPageTest.testRedCardLandedPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="testRedCardLandedPage()[pri:0, instance:testredcard.RedCardPageTest@b62d79]" started-at="2020-08-31T12:07:58 EDT" name="testRedCardLandedPage" finished-at="2020-08-31T12:07:59 EDT" duration-ms="628" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRedCardLandedPage -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:testredcard.RedCardPageTest@b62d79]" started-at="2020-08-31T12:07:58 EDT" name="getInit" finished-at="2020-08-31T12:07:58 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testredcard.RedCardPageTest@b62d79]" started-at="2020-08-31T12:07:59 EDT" name="afterEachTestMethod" finished-at="2020-08-31T12:08:00 EDT" duration-ms="705" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testRedCardLandedPage status=SUCCESS method=RedCardPageTest.testRedCardLandedPage()[pri:0, instance:testredcard.RedCardPageTest@b62d79] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:testredcard.RedCardPageTest@b62d79]" started-at="2020-08-31T12:08:00 EDT" name="cleanUp" finished-at="2020-08-31T12:08:00 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testredcard.RedCardPageTest@b62d79]" started-at="2020-08-31T12:08:00 EDT" name="setUp" finished-at="2020-08-31T12:08:05 EDT" duration-ms="5579" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[84]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.target.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:testredcard.RedCardPageTest@b62d79]" started-at="2020-08-31T12:08:05 EDT" name="getInit" finished-at="2020-08-31T12:08:05 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testredcard.RedCardPageTest@b62d79]" started-at="2020-08-31T12:08:05 EDT" name="startExtent" finished-at="2020-08-31T12:08:05 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testredcard.RedCardPageTest.testShowMoreButton()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="testShowMoreButton()[pri:0, instance:testredcard.RedCardPageTest@b62d79]" started-at="2020-08-31T12:08:05 EDT" name="testShowMoreButton" finished-at="2020-08-31T12:08:06 EDT" duration-ms="943" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testShowMoreButton -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testredcard.RedCardPageTest@b62d79]" started-at="2020-08-31T12:08:06 EDT" name="afterEachTestMethod" finished-at="2020-08-31T12:08:07 EDT" duration-ms="758" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testShowMoreButton status=SUCCESS method=RedCardPageTest.testShowMoreButton()[pri:0, instance:testredcard.RedCardPageTest@b62d79] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testredcard.RedCardPageTest@b62d79]" started-at="2020-08-31T12:08:07 EDT" name="setUp" finished-at="2020-08-31T12:08:13 EDT" duration-ms="5708" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[84]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.target.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:testredcard.RedCardPageTest@b62d79]" started-at="2020-08-31T12:08:07 EDT" name="cleanUp" finished-at="2020-08-31T12:08:07 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:testredcard.RedCardPageTest@b62d79]" started-at="2020-08-31T12:08:13 EDT" name="getInit" finished-at="2020-08-31T12:08:13 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testredcard.RedCardPageTest@b62d79]" started-at="2020-08-31T12:08:13 EDT" name="startExtent" finished-at="2020-08-31T12:08:13 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testredcard.RedCardPageTest.testValidateRedCardExclusivePage() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="testValidateRedCardExclusivePage()[pri:0, instance:testredcard.RedCardPageTest@b62d79]" started-at="2020-08-31T12:08:13 EDT" name="testValidateRedCardExclusivePage" finished-at="2020-08-31T12:08:16 EDT" duration-ms="3351" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testValidateRedCardExclusivePage -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testredcard.RedCardPageTest@b62d79]" started-at="2020-08-31T12:08:16 EDT" name="afterEachTestMethod" finished-at="2020-08-31T12:08:17 EDT" duration-ms="696" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testValidateRedCardExclusivePage status=SUCCESS method=RedCardPageTest.testValidateRedCardExclusivePage()[pri:0, instance:testredcard.RedCardPageTest@b62d79] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:testredcard.RedCardPageTest@b62d79]" started-at="2020-08-31T12:08:17 EDT" name="cleanUp" finished-at="2020-08-31T12:08:17 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
      </class> <!-- testredcard.RedCardPageTest -->
      <class name="testRegistry.RegistryHomePageTest">
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testRegistry.RegistryHomePageTest@6631f5ca]" started-at="2020-08-31T12:08:17 EDT" name="setUp" finished-at="2020-08-31T12:08:22 EDT" duration-ms="5645" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[84]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.target.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testRegistry.RegistryHomePageTest@6631f5ca]" started-at="2020-08-31T12:08:22 EDT" name="startExtent" finished-at="2020-08-31T12:08:22 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testRegistry.RegistryHomePageTest.testAppStroeLogo() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:testRegistry.RegistryHomePageTest@6631f5ca]" started-at="2020-08-31T12:08:22 EDT" name="getInit" finished-at="2020-08-31T12:08:22 EDT" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method signature="testAppStroeLogo()[pri:0, instance:testRegistry.RegistryHomePageTest@6631f5ca]" started-at="2020-08-31T12:08:22 EDT" name="testAppStroeLogo" finished-at="2020-08-31T12:08:31 EDT" duration-ms="8598" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAppStroeLogo -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testRegistry.RegistryHomePageTest@6631f5ca]" started-at="2020-08-31T12:08:31 EDT" name="afterEachTestMethod" finished-at="2020-08-31T12:08:32 EDT" duration-ms="902" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testAppStroeLogo status=SUCCESS method=RegistryHomePageTest.testAppStroeLogo()[pri:0, instance:testRegistry.RegistryHomePageTest@6631f5ca] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:testRegistry.RegistryHomePageTest@6631f5ca]" started-at="2020-08-31T12:08:32 EDT" name="cleanUp" finished-at="2020-08-31T12:08:32 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testRegistry.RegistryHomePageTest@6631f5ca]" started-at="2020-08-31T12:08:32 EDT" name="setUp" finished-at="2020-08-31T12:08:38 EDT" duration-ms="6153" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[84]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.target.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testRegistry.RegistryHomePageTest@6631f5ca]" started-at="2020-08-31T12:08:38 EDT" name="startExtent" finished-at="2020-08-31T12:08:38 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testRegistry.RegistryHomePageTest.testBoxLogo()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:testRegistry.RegistryHomePageTest@6631f5ca]" started-at="2020-08-31T12:08:38 EDT" name="getInit" finished-at="2020-08-31T12:08:38 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method signature="testBoxLogo()[pri:0, instance:testRegistry.RegistryHomePageTest@6631f5ca]" started-at="2020-08-31T12:08:38 EDT" name="testBoxLogo" finished-at="2020-08-31T12:08:41 EDT" duration-ms="3112" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBoxLogo -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testRegistry.RegistryHomePageTest@6631f5ca]" started-at="2020-08-31T12:08:41 EDT" name="afterEachTestMethod" finished-at="2020-08-31T12:08:42 EDT" duration-ms="917" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testBoxLogo status=SUCCESS method=RegistryHomePageTest.testBoxLogo()[pri:0, instance:testRegistry.RegistryHomePageTest@6631f5ca] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:testRegistry.RegistryHomePageTest@6631f5ca]" started-at="2020-08-31T12:08:42 EDT" name="cleanUp" finished-at="2020-08-31T12:08:42 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testRegistry.RegistryHomePageTest@6631f5ca]" started-at="2020-08-31T12:08:42 EDT" name="setUp" finished-at="2020-08-31T12:08:48 EDT" duration-ms="5657" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[84]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.target.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testRegistry.RegistryHomePageTest@6631f5ca]" started-at="2020-08-31T12:08:48 EDT" name="startExtent" finished-at="2020-08-31T12:08:48 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testRegistry.RegistryHomePageTest.testCreateBabyRegistry() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:testRegistry.RegistryHomePageTest@6631f5ca]" started-at="2020-08-31T12:08:48 EDT" name="getInit" finished-at="2020-08-31T12:08:48 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method signature="testCreateBabyRegistry()[pri:0, instance:testRegistry.RegistryHomePageTest@6631f5ca]" started-at="2020-08-31T12:08:48 EDT" name="testCreateBabyRegistry" finished-at="2020-08-31T12:08:56 EDT" duration-ms="8004" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateBabyRegistry -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testRegistry.RegistryHomePageTest@6631f5ca]" started-at="2020-08-31T12:08:56 EDT" name="afterEachTestMethod" finished-at="2020-08-31T12:08:57 EDT" duration-ms="845" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testCreateBabyRegistry status=SUCCESS method=RegistryHomePageTest.testCreateBabyRegistry()[pri:0, instance:testRegistry.RegistryHomePageTest@6631f5ca] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:testRegistry.RegistryHomePageTest@6631f5ca]" started-at="2020-08-31T12:08:57 EDT" name="cleanUp" finished-at="2020-08-31T12:08:57 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testRegistry.RegistryHomePageTest@6631f5ca]" started-at="2020-08-31T12:08:57 EDT" name="setUp" finished-at="2020-08-31T12:09:02 EDT" duration-ms="5705" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[84]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.target.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testRegistry.RegistryHomePageTest@6631f5ca]" started-at="2020-08-31T12:09:02 EDT" name="startExtent" finished-at="2020-08-31T12:09:02 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testRegistry.RegistryHomePageTest.testLogoIsDisplayed()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:testRegistry.RegistryHomePageTest@6631f5ca]" started-at="2020-08-31T12:09:02 EDT" name="getInit" finished-at="2020-08-31T12:09:02 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method signature="testLogoIsDisplayed()[pri:0, instance:testRegistry.RegistryHomePageTest@6631f5ca]" started-at="2020-08-31T12:09:02 EDT" name="testLogoIsDisplayed" finished-at="2020-08-31T12:09:02 EDT" duration-ms="46" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLogoIsDisplayed -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testRegistry.RegistryHomePageTest@6631f5ca]" started-at="2020-08-31T12:09:02 EDT" name="afterEachTestMethod" finished-at="2020-08-31T12:09:03 EDT" duration-ms="680" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testLogoIsDisplayed status=SUCCESS method=RegistryHomePageTest.testLogoIsDisplayed()[pri:0, instance:testRegistry.RegistryHomePageTest@6631f5ca] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:testRegistry.RegistryHomePageTest@6631f5ca]" started-at="2020-08-31T12:09:03 EDT" name="cleanUp" finished-at="2020-08-31T12:09:03 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testRegistry.RegistryHomePageTest@6631f5ca]" started-at="2020-08-31T12:09:03 EDT" name="setUp" finished-at="2020-08-31T12:09:09 EDT" duration-ms="6110" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[84]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.target.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:testRegistry.RegistryHomePageTest@6631f5ca]" started-at="2020-08-31T12:09:09 EDT" name="getInit" finished-at="2020-08-31T12:09:09 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testRegistry.RegistryHomePageTest@6631f5ca]" started-at="2020-08-31T12:09:09 EDT" name="startExtent" finished-at="2020-08-31T12:09:09 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testRegistry.RegistryHomePageTest.testRegistryButtonIsClickable() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="testRegistryButtonIsClickable()[pri:0, instance:testRegistry.RegistryHomePageTest@6631f5ca]" started-at="2020-08-31T12:09:09 EDT" name="testRegistryButtonIsClickable" finished-at="2020-08-31T12:09:12 EDT" duration-ms="3021" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRegistryButtonIsClickable -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testRegistry.RegistryHomePageTest@6631f5ca]" started-at="2020-08-31T12:09:12 EDT" name="afterEachTestMethod" finished-at="2020-08-31T12:09:13 EDT" duration-ms="846" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testRegistryButtonIsClickable status=SUCCESS method=RegistryHomePageTest.testRegistryButtonIsClickable()[pri:0, instance:testRegistry.RegistryHomePageTest@6631f5ca] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:testRegistry.RegistryHomePageTest@6631f5ca]" started-at="2020-08-31T12:09:13 EDT" name="cleanUp" finished-at="2020-08-31T12:09:13 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
      </class> <!-- testRegistry.RegistryHomePageTest -->
      <class name="testkidsactivities.KidsActiviesTest">
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testkidsactivities.KidsActiviesTest@2accdbb5]" started-at="2020-08-31T12:05:41 EDT" name="setUp" finished-at="2020-08-31T12:05:47 EDT" duration-ms="5985" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[84]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.target.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testkidsactivities.KidsActiviesTest@2accdbb5]" started-at="2020-08-31T12:05:47 EDT" name="startExtent" finished-at="2020-08-31T12:05:47 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testkidsactivities.KidsActiviesTest.testAgeActivesButton() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:testkidsactivities.KidsActiviesTest@2accdbb5]" started-at="2020-08-31T12:05:47 EDT" name="getInit" finished-at="2020-08-31T12:05:47 EDT" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method signature="testAgeActivesButton()[pri:0, instance:testkidsactivities.KidsActiviesTest@2accdbb5]" started-at="2020-08-31T12:05:47 EDT" name="testAgeActivesButton" finished-at="2020-08-31T12:05:57 EDT" duration-ms="10044" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//h3[contains(text(),'activities')]"}
  (Session info: chrome=84.0.4147.135)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'LAPTOP-6QSDTELI', ip: '192.168.1.185', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.8'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 84.0.4147.135, chrome: {chromedriverVersion: 84.0.4147.30 (48b3e868b4cc0..., userDataDir: C:\Users\lenis\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:58169}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}
Session ID: 64a7305721f6299fb1ff710c66c86647
*** Element info: {Using=xpath, value=//h3[contains(text(),'activities')]}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//h3[contains(text(),'activities')]"}
  (Session info: chrome=84.0.4147.135)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'LAPTOP-6QSDTELI', ip: '192.168.1.185', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.8'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 84.0.4147.135, chrome: {chromedriverVersion: 84.0.4147.30 (48b3e868b4cc0..., userDataDir: C:\Users\lenis\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:58169}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}
Session ID: 64a7305721f6299fb1ff710c66c86647
*** Element info: {Using=xpath, value=//h3[contains(text(),'activities')]}
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:428)
at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at com.sun.proxy.$Proxy14.click(Unknown Source)
at kidsactivates.MainPage.ageActivesButton(MainPage.java:36)
at testkidsactivities.KidsActiviesTest.testAgeActivesButton(KidsActiviesTest.java:19)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAgeActivesButton -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testkidsactivities.KidsActiviesTest@2accdbb5]" started-at="2020-08-31T12:05:57 EDT" name="afterEachTestMethod" finished-at="2020-08-31T12:05:59 EDT" duration-ms="1345" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testAgeActivesButton status=FAILURE method=KidsActiviesTest.testAgeActivesButton()[pri:0, instance:testkidsactivities.KidsActiviesTest@2accdbb5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testkidsactivities.KidsActiviesTest@2accdbb5]" started-at="2020-08-31T12:05:59 EDT" name="setUp" finished-at="2020-08-31T12:06:05 EDT" duration-ms="6186" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[84]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.target.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:testkidsactivities.KidsActiviesTest@2accdbb5]" started-at="2020-08-31T12:05:59 EDT" name="cleanUp" finished-at="2020-08-31T12:05:59 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testkidsactivities.KidsActiviesTest@2accdbb5]" started-at="2020-08-31T12:06:05 EDT" name="startExtent" finished-at="2020-08-31T12:06:05 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testkidsactivities.KidsActiviesTest.testFindStoreTab() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:testkidsactivities.KidsActiviesTest@2accdbb5]" started-at="2020-08-31T12:06:05 EDT" name="getInit" finished-at="2020-08-31T12:06:05 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method signature="testFindStoreTab()[pri:0, instance:testkidsactivities.KidsActiviesTest@2accdbb5]" started-at="2020-08-31T12:06:05 EDT" name="testFindStoreTab" finished-at="2020-08-31T12:06:15 EDT" duration-ms="10053" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//h3[contains(text(),'activities')]"}
  (Session info: chrome=84.0.4147.135)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'LAPTOP-6QSDTELI', ip: '192.168.1.185', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.8'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 84.0.4147.135, chrome: {chromedriverVersion: 84.0.4147.30 (48b3e868b4cc0..., userDataDir: C:\Users\lenis\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:58218}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}
Session ID: 9949472b52ac391bfc3b7b36e0fd42a8
*** Element info: {Using=xpath, value=//h3[contains(text(),'activities')]}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//h3[contains(text(),'activities')]"}
  (Session info: chrome=84.0.4147.135)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'LAPTOP-6QSDTELI', ip: '192.168.1.185', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.8'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 84.0.4147.135, chrome: {chromedriverVersion: 84.0.4147.30 (48b3e868b4cc0..., userDataDir: C:\Users\lenis\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:58218}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}
Session ID: 9949472b52ac391bfc3b7b36e0fd42a8
*** Element info: {Using=xpath, value=//h3[contains(text(),'activities')]}
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:428)
at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at com.sun.proxy.$Proxy14.click(Unknown Source)
at kidsactivates.MainPage.ageActivesButton(MainPage.java:36)
at kidsactivates.MainPage.findStoreTab(MainPage.java:86)
at testkidsactivities.KidsActiviesTest.testFindStoreTab(KidsActiviesTest.java:38)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindStoreTab -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testkidsactivities.KidsActiviesTest@2accdbb5]" started-at="2020-08-31T12:06:15 EDT" name="afterEachTestMethod" finished-at="2020-08-31T12:06:16 EDT" duration-ms="1423" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testFindStoreTab status=FAILURE method=KidsActiviesTest.testFindStoreTab()[pri:0, instance:testkidsactivities.KidsActiviesTest@2accdbb5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:testkidsactivities.KidsActiviesTest@2accdbb5]" started-at="2020-08-31T12:06:16 EDT" name="cleanUp" finished-at="2020-08-31T12:06:16 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testkidsactivities.KidsActiviesTest@2accdbb5]" started-at="2020-08-31T12:06:16 EDT" name="setUp" finished-at="2020-08-31T12:06:22 EDT" duration-ms="5801" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[84]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.target.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testkidsactivities.KidsActiviesTest@2accdbb5]" started-at="2020-08-31T12:06:22 EDT" name="startExtent" finished-at="2020-08-31T12:06:22 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testkidsactivities.KidsActiviesTest.testGiftCard() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:testkidsactivities.KidsActiviesTest@2accdbb5]" started-at="2020-08-31T12:06:22 EDT" name="getInit" finished-at="2020-08-31T12:06:22 EDT" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method signature="testGiftCard()[pri:0, instance:testkidsactivities.KidsActiviesTest@2accdbb5]" started-at="2020-08-31T12:06:22 EDT" name="testGiftCard" finished-at="2020-08-31T12:06:32 EDT" duration-ms="10066" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//h3[contains(text(),'activities')]"}
  (Session info: chrome=84.0.4147.135)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'LAPTOP-6QSDTELI', ip: '192.168.1.185', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.8'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 84.0.4147.135, chrome: {chromedriverVersion: 84.0.4147.30 (48b3e868b4cc0..., userDataDir: C:\Users\lenis\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:58268}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}
Session ID: 2389bd9183262d7924388bb4ea034786
*** Element info: {Using=xpath, value=//h3[contains(text(),'activities')]}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//h3[contains(text(),'activities')]"}
  (Session info: chrome=84.0.4147.135)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'LAPTOP-6QSDTELI', ip: '192.168.1.185', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.8'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 84.0.4147.135, chrome: {chromedriverVersion: 84.0.4147.30 (48b3e868b4cc0..., userDataDir: C:\Users\lenis\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:58268}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}
Session ID: 2389bd9183262d7924388bb4ea034786
*** Element info: {Using=xpath, value=//h3[contains(text(),'activities')]}
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:428)
at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at com.sun.proxy.$Proxy14.click(Unknown Source)
at kidsactivates.MainPage.ageActivesButton(MainPage.java:36)
at kidsactivates.MainPage.giftCard(MainPage.java:63)
at testkidsactivities.KidsActiviesTest.testGiftCard(KidsActiviesTest.java:29)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGiftCard -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testkidsactivities.KidsActiviesTest@2accdbb5]" started-at="2020-08-31T12:06:32 EDT" name="afterEachTestMethod" finished-at="2020-08-31T12:06:33 EDT" duration-ms="1360" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testGiftCard status=FAILURE method=KidsActiviesTest.testGiftCard()[pri:0, instance:testkidsactivities.KidsActiviesTest@2accdbb5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:testkidsactivities.KidsActiviesTest@2accdbb5]" started-at="2020-08-31T12:06:33 EDT" name="cleanUp" finished-at="2020-08-31T12:06:33 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testkidsactivities.KidsActiviesTest@2accdbb5]" started-at="2020-08-31T12:06:33 EDT" name="setUp" finished-at="2020-08-31T12:06:38 EDT" duration-ms="5024" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[84]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.target.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testkidsactivities.KidsActiviesTest@2accdbb5]" started-at="2020-08-31T12:06:38 EDT" name="startExtent" finished-at="2020-08-31T12:06:38 EDT" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testkidsactivities.KidsActiviesTest.testGiftCorner() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:testkidsactivities.KidsActiviesTest@2accdbb5]" started-at="2020-08-31T12:06:38 EDT" name="getInit" finished-at="2020-08-31T12:06:38 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method signature="testGiftCorner()[pri:0, instance:testkidsactivities.KidsActiviesTest@2accdbb5]" started-at="2020-08-31T12:06:38 EDT" name="testGiftCorner" finished-at="2020-08-31T12:06:49 EDT" duration-ms="10027" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//h3[contains(text(),'activities')]"}
  (Session info: chrome=84.0.4147.135)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'LAPTOP-6QSDTELI', ip: '192.168.1.185', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.8'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 84.0.4147.135, chrome: {chromedriverVersion: 84.0.4147.30 (48b3e868b4cc0..., userDataDir: C:\Users\lenis\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:58316}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}
Session ID: 36cdc30e423caf61eba299e56a2552ee
*** Element info: {Using=xpath, value=//h3[contains(text(),'activities')]}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//h3[contains(text(),'activities')]"}
  (Session info: chrome=84.0.4147.135)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'LAPTOP-6QSDTELI', ip: '192.168.1.185', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.8'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 84.0.4147.135, chrome: {chromedriverVersion: 84.0.4147.30 (48b3e868b4cc0..., userDataDir: C:\Users\lenis\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:58316}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}
Session ID: 36cdc30e423caf61eba299e56a2552ee
*** Element info: {Using=xpath, value=//h3[contains(text(),'activities')]}
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:428)
at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at com.sun.proxy.$Proxy14.click(Unknown Source)
at kidsactivates.MainPage.ageActivesButton(MainPage.java:36)
at kidsactivates.MainPage.giftCorner(MainPage.java:79)
at testkidsactivities.KidsActiviesTest.testGiftCorner(KidsActiviesTest.java:34)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGiftCorner -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testkidsactivities.KidsActiviesTest@2accdbb5]" started-at="2020-08-31T12:06:49 EDT" name="afterEachTestMethod" finished-at="2020-08-31T12:06:50 EDT" duration-ms="1322" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testGiftCorner status=FAILURE method=KidsActiviesTest.testGiftCorner()[pri:0, instance:testkidsactivities.KidsActiviesTest@2accdbb5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:testkidsactivities.KidsActiviesTest@2accdbb5]" started-at="2020-08-31T12:06:50 EDT" name="cleanUp" finished-at="2020-08-31T12:06:50 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testkidsactivities.KidsActiviesTest@2accdbb5]" started-at="2020-08-31T12:06:50 EDT" name="setUp" finished-at="2020-08-31T12:06:55 EDT" duration-ms="5233" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[84]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.target.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:testkidsactivities.KidsActiviesTest@2accdbb5]" started-at="2020-08-31T12:06:55 EDT" name="getInit" finished-at="2020-08-31T12:06:55 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testkidsactivities.KidsActiviesTest@2accdbb5]" started-at="2020-08-31T12:06:55 EDT" name="startExtent" finished-at="2020-08-31T12:06:55 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testkidsactivities.KidsActiviesTest.testToysButton() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="testToysButton()[pri:0, instance:testkidsactivities.KidsActiviesTest@2accdbb5]" started-at="2020-08-31T12:06:55 EDT" name="testToysButton" finished-at="2020-08-31T12:07:05 EDT" duration-ms="10072" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//h3[contains(text(),'activities')]"}
  (Session info: chrome=84.0.4147.135)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'LAPTOP-6QSDTELI', ip: '192.168.1.185', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.8'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 84.0.4147.135, chrome: {chromedriverVersion: 84.0.4147.30 (48b3e868b4cc0..., userDataDir: C:\Users\lenis\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:58364}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}
Session ID: 0c1c8921c7b77e470dfebc5a3c5083e0
*** Element info: {Using=xpath, value=//h3[contains(text(),'activities')]}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//h3[contains(text(),'activities')]"}
  (Session info: chrome=84.0.4147.135)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'LAPTOP-6QSDTELI', ip: '192.168.1.185', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.8'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 84.0.4147.135, chrome: {chromedriverVersion: 84.0.4147.30 (48b3e868b4cc0..., userDataDir: C:\Users\lenis\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:58364}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}
Session ID: 0c1c8921c7b77e470dfebc5a3c5083e0
*** Element info: {Using=xpath, value=//h3[contains(text(),'activities')]}
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:428)
at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at com.sun.proxy.$Proxy14.click(Unknown Source)
at kidsactivates.MainPage.ageActivesButton(MainPage.java:36)
at kidsactivates.MainPage.toysButton(MainPage.java:49)
at testkidsactivities.KidsActiviesTest.testToysButton(KidsActiviesTest.java:24)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToysButton -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testkidsactivities.KidsActiviesTest@2accdbb5]" started-at="2020-08-31T12:07:05 EDT" name="afterEachTestMethod" finished-at="2020-08-31T12:07:06 EDT" duration-ms="1343" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testToysButton status=FAILURE method=KidsActiviesTest.testToysButton()[pri:0, instance:testkidsactivities.KidsActiviesTest@2accdbb5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:testkidsactivities.KidsActiviesTest@2accdbb5]" started-at="2020-08-31T12:07:06 EDT" name="cleanUp" finished-at="2020-08-31T12:07:06 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
      </class> <!-- testkidsactivities.KidsActiviesTest -->
      <class name="readyforschooltest.SchoolHomePageTest">
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:readyforschooltest.SchoolHomePageTest@1e6454ec]" started-at="2020-08-31T12:03:21 EDT" name="setUp" finished-at="2020-08-31T12:03:27 EDT" duration-ms="5885" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[84]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.target.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:readyforschooltest.SchoolHomePageTest@1e6454ec]" started-at="2020-08-31T12:03:27 EDT" name="startExtent" finished-at="2020-08-31T12:03:27 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void readyforschooltest.SchoolHomePageTest.testBinderPageLanded() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:readyforschooltest.SchoolHomePageTest@1e6454ec]" started-at="2020-08-31T12:03:27 EDT" name="getInit" finished-at="2020-08-31T12:03:27 EDT" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method signature="testBinderPageLanded()[pri:0, instance:readyforschooltest.SchoolHomePageTest@1e6454ec]" started-at="2020-08-31T12:03:27 EDT" name="testBinderPageLanded" finished-at="2020-08-31T12:03:44 EDT" duration-ms="16552" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//h2[@class='Heading__StyledHeading-sc-1m9kw5a-0 hdEoFP h-text-bs h-text-black']"}
  (Session info: chrome=84.0.4147.135)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'LAPTOP-6QSDTELI', ip: '192.168.1.185', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.8'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 84.0.4147.135, chrome: {chromedriverVersion: 84.0.4147.30 (48b3e868b4cc0..., userDataDir: C:\Users\lenis\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:57579}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}
Session ID: 4a2b2ff1082bf3f7b37164f372d69fc4
*** Element info: {Using=xpath, value=//h2[@class='Heading__StyledHeading-sc-1m9kw5a-0 hdEoFP h-text-bs h-text-black']}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//h2[@class='Heading__StyledHeading-sc-1m9kw5a-0 hdEoFP h-text-bs h-text-black']"}
  (Session info: chrome=84.0.4147.135)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'LAPTOP-6QSDTELI', ip: '192.168.1.185', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.8'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 84.0.4147.135, chrome: {chromedriverVersion: 84.0.4147.30 (48b3e868b4cc0..., userDataDir: C:\Users\lenis\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:57579}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}
Session ID: 4a2b2ff1082bf3f7b37164f372d69fc4
*** Element info: {Using=xpath, value=//h2[@class='Heading__StyledHeading-sc-1m9kw5a-0 hdEoFP h-text-bs h-text-black']}
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:428)
at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at com.sun.proxy.$Proxy14.getText(Unknown Source)
at readyforschool.SchoolHomePage.validatebinderPageLanded(SchoolHomePage.java:88)
at readyforschooltest.SchoolHomePageTest.testBinderPageLanded(SchoolHomePageTest.java:40)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBinderPageLanded -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:readyforschooltest.SchoolHomePageTest@1e6454ec]" started-at="2020-08-31T12:03:44 EDT" name="afterEachTestMethod" finished-at="2020-08-31T12:03:45 EDT" duration-ms="1134" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testBinderPageLanded status=FAILURE method=SchoolHomePageTest.testBinderPageLanded()[pri:0, instance:readyforschooltest.SchoolHomePageTest@1e6454ec] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:readyforschooltest.SchoolHomePageTest@1e6454ec]" started-at="2020-08-31T12:03:45 EDT" name="cleanUp" finished-at="2020-08-31T12:03:45 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:readyforschooltest.SchoolHomePageTest@1e6454ec]" started-at="2020-08-31T12:03:45 EDT" name="setUp" finished-at="2020-08-31T12:03:51 EDT" duration-ms="5928" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[84]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.target.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:readyforschooltest.SchoolHomePageTest@1e6454ec]" started-at="2020-08-31T12:03:51 EDT" name="startExtent" finished-at="2020-08-31T12:03:51 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void readyforschooltest.SchoolHomePageTest.testFolderPageLanded() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:readyforschooltest.SchoolHomePageTest@1e6454ec]" started-at="2020-08-31T12:03:51 EDT" name="getInit" finished-at="2020-08-31T12:03:51 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method signature="testFolderPageLanded()[pri:0, instance:readyforschooltest.SchoolHomePageTest@1e6454ec]" started-at="2020-08-31T12:03:51 EDT" name="testFolderPageLanded" finished-at="2020-08-31T12:03:59 EDT" duration-ms="8283" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFolderPageLanded -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:readyforschooltest.SchoolHomePageTest@1e6454ec]" started-at="2020-08-31T12:03:59 EDT" name="afterEachTestMethod" finished-at="2020-08-31T12:04:00 EDT" duration-ms="727" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testFolderPageLanded status=SUCCESS method=SchoolHomePageTest.testFolderPageLanded()[pri:0, instance:readyforschooltest.SchoolHomePageTest@1e6454ec] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:readyforschooltest.SchoolHomePageTest@1e6454ec]" started-at="2020-08-31T12:04:00 EDT" name="cleanUp" finished-at="2020-08-31T12:04:00 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:readyforschooltest.SchoolHomePageTest@1e6454ec]" started-at="2020-08-31T12:04:00 EDT" name="setUp" finished-at="2020-08-31T12:04:06 EDT" duration-ms="6439" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[84]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.target.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:readyforschooltest.SchoolHomePageTest@1e6454ec]" started-at="2020-08-31T12:04:06 EDT" name="startExtent" finished-at="2020-08-31T12:04:06 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void readyforschooltest.SchoolHomePageTest.testGluePageLanded() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:readyforschooltest.SchoolHomePageTest@1e6454ec]" started-at="2020-08-31T12:04:06 EDT" name="getInit" finished-at="2020-08-31T12:04:06 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method signature="testGluePageLanded()[pri:0, instance:readyforschooltest.SchoolHomePageTest@1e6454ec]" started-at="2020-08-31T12:04:06 EDT" name="testGluePageLanded" finished-at="2020-08-31T12:04:15 EDT" duration-ms="8238" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGluePageLanded -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:readyforschooltest.SchoolHomePageTest@1e6454ec]" started-at="2020-08-31T12:04:15 EDT" name="afterEachTestMethod" finished-at="2020-08-31T12:04:15 EDT" duration-ms="788" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testGluePageLanded status=SUCCESS method=SchoolHomePageTest.testGluePageLanded()[pri:0, instance:readyforschooltest.SchoolHomePageTest@1e6454ec] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:readyforschooltest.SchoolHomePageTest@1e6454ec]" started-at="2020-08-31T12:04:15 EDT" name="cleanUp" finished-at="2020-08-31T12:04:15 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:readyforschooltest.SchoolHomePageTest@1e6454ec]" started-at="2020-08-31T12:04:15 EDT" name="setUp" finished-at="2020-08-31T12:04:22 EDT" duration-ms="6102" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[84]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.target.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:readyforschooltest.SchoolHomePageTest@1e6454ec]" started-at="2020-08-31T12:04:22 EDT" name="startExtent" finished-at="2020-08-31T12:04:22 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void readyforschooltest.SchoolHomePageTest.testHighLightersPageLanded() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:readyforschooltest.SchoolHomePageTest@1e6454ec]" started-at="2020-08-31T12:04:22 EDT" name="getInit" finished-at="2020-08-31T12:04:22 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method signature="testHighLightersPageLanded()[pri:0, instance:readyforschooltest.SchoolHomePageTest@1e6454ec]" started-at="2020-08-31T12:04:22 EDT" name="testHighLightersPageLanded" finished-at="2020-08-31T12:04:30 EDT" duration-ms="8597" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHighLightersPageLanded -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:readyforschooltest.SchoolHomePageTest@1e6454ec]" started-at="2020-08-31T12:04:30 EDT" name="afterEachTestMethod" finished-at="2020-08-31T12:04:31 EDT" duration-ms="729" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testHighLightersPageLanded status=SUCCESS method=SchoolHomePageTest.testHighLightersPageLanded()[pri:0, instance:readyforschooltest.SchoolHomePageTest@1e6454ec] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:readyforschooltest.SchoolHomePageTest@1e6454ec]" started-at="2020-08-31T12:04:31 EDT" name="setUp" finished-at="2020-08-31T12:04:37 EDT" duration-ms="5760" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[84]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.target.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:readyforschooltest.SchoolHomePageTest@1e6454ec]" started-at="2020-08-31T12:04:31 EDT" name="cleanUp" finished-at="2020-08-31T12:04:31 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:readyforschooltest.SchoolHomePageTest@1e6454ec]" started-at="2020-08-31T12:04:37 EDT" name="getInit" finished-at="2020-08-31T12:04:37 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:readyforschooltest.SchoolHomePageTest@1e6454ec]" started-at="2020-08-31T12:04:37 EDT" name="startExtent" finished-at="2020-08-31T12:04:37 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void readyforschooltest.SchoolHomePageTest.testMarkersPageLanded() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="testMarkersPageLanded()[pri:0, instance:readyforschooltest.SchoolHomePageTest@1e6454ec]" started-at="2020-08-31T12:04:37 EDT" name="testMarkersPageLanded" finished-at="2020-08-31T12:04:44 EDT" duration-ms="7269" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Ready for School] but found [Markers]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Ready for School] but found [Markers]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:575)
at org.testng.Assert.assertEquals(Assert.java:585)
at readyforschool.SchoolHomePage.validateMarkersPageLanded(SchoolHomePage.java:129)
at readyforschooltest.SchoolHomePageTest.testMarkersPageLanded(SchoolHomePageTest.java:55)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMarkersPageLanded -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:readyforschooltest.SchoolHomePageTest@1e6454ec]" started-at="2020-08-31T12:04:44 EDT" name="afterEachTestMethod" finished-at="2020-08-31T12:04:46 EDT" duration-ms="1820" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testMarkersPageLanded status=FAILURE method=SchoolHomePageTest.testMarkersPageLanded()[pri:0, instance:readyforschooltest.SchoolHomePageTest@1e6454ec] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:readyforschooltest.SchoolHomePageTest@1e6454ec]" started-at="2020-08-31T12:04:46 EDT" name="cleanUp" finished-at="2020-08-31T12:04:46 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:readyforschooltest.SchoolHomePageTest@1e6454ec]" started-at="2020-08-31T12:04:46 EDT" name="setUp" finished-at="2020-08-31T12:04:52 EDT" duration-ms="5779" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[84]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.target.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:readyforschooltest.SchoolHomePageTest@1e6454ec]" started-at="2020-08-31T12:04:52 EDT" name="startExtent" finished-at="2020-08-31T12:04:52 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void readyforschooltest.SchoolHomePageTest.testNoteBookPageLanded() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:readyforschooltest.SchoolHomePageTest@1e6454ec]" started-at="2020-08-31T12:04:52 EDT" name="getInit" finished-at="2020-08-31T12:04:52 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method signature="testNoteBookPageLanded()[pri:0, instance:readyforschooltest.SchoolHomePageTest@1e6454ec]" started-at="2020-08-31T12:04:52 EDT" name="testNoteBookPageLanded" finished-at="2020-08-31T12:05:00 EDT" duration-ms="8405" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNoteBookPageLanded -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:readyforschooltest.SchoolHomePageTest@1e6454ec]" started-at="2020-08-31T12:05:00 EDT" name="afterEachTestMethod" finished-at="2020-08-31T12:05:01 EDT" duration-ms="782" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testNoteBookPageLanded status=SUCCESS method=SchoolHomePageTest.testNoteBookPageLanded()[pri:0, instance:readyforschooltest.SchoolHomePageTest@1e6454ec] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:readyforschooltest.SchoolHomePageTest@1e6454ec]" started-at="2020-08-31T12:05:01 EDT" name="cleanUp" finished-at="2020-08-31T12:05:01 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:readyforschooltest.SchoolHomePageTest@1e6454ec]" started-at="2020-08-31T12:05:01 EDT" name="setUp" finished-at="2020-08-31T12:05:06 EDT" duration-ms="5224" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[84]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.target.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:readyforschooltest.SchoolHomePageTest@1e6454ec]" started-at="2020-08-31T12:05:06 EDT" name="startExtent" finished-at="2020-08-31T12:05:06 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void readyforschooltest.SchoolHomePageTest.testPencilsPageLanded() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:readyforschooltest.SchoolHomePageTest@1e6454ec]" started-at="2020-08-31T12:05:06 EDT" name="getInit" finished-at="2020-08-31T12:05:06 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method signature="testPencilsPageLanded()[pri:0, instance:readyforschooltest.SchoolHomePageTest@1e6454ec]" started-at="2020-08-31T12:05:06 EDT" name="testPencilsPageLanded" finished-at="2020-08-31T12:05:14 EDT" duration-ms="8016" status="FAIL">
          <exception class="org.openqa.selenium.ElementClickInterceptedException">
            <message>
              <![CDATA[element click intercepted: Element <div class="ItemTitle-yw3r8r-0 kZhjiv">...</div> is not clickable at point (756, 663). Other element would receive the click: <iframe frameborder="0" src="https://tpc.googlesyndication.com/safeframe/1-0-37/html/container.html" id="google_ads_iframe_/7079046/tgt/5xtyp_1" title="3rd party ad content" name="" scrolling="no" marginwidth="0" marginheight="0" width="0" height="93" data-is-safeframe="true" sandbox="allow-forms allow-pointer-lock allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts allow-top-navigation-by-user-activation" data-google-container-id="2" style="border: 0px; vertical-align: bottom; min-width: 100%; min-height: 93px;" data-ur-xdomain="true" data-ur-indexed="true" data-ur-fpath="8" data-ur-ptoken="1d541bd718f73195" data-ur-rtimebase="1598889906918" data-load-complete="true"></iframe>
  (Session info: chrome=84.0.4147.135)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'LAPTOP-6QSDTELI', ip: '192.168.1.185', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.8'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 84.0.4147.135, chrome: {chromedriverVersion: 84.0.4147.30 (48b3e868b4cc0..., userDataDir: C:\Users\lenis\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:57980}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}
Session ID: 3ab83e82add89d8f878a586a1b753307]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.ElementClickInterceptedException: element click intercepted: Element <div class="ItemTitle-yw3r8r-0 kZhjiv">...</div> is not clickable at point (756, 663). Other element would receive the click: <iframe frameborder="0" src="https://tpc.googlesyndication.com/safeframe/1-0-37/html/container.html" id="google_ads_iframe_/7079046/tgt/5xtyp_1" title="3rd party ad content" name="" scrolling="no" marginwidth="0" marginheight="0" width="0" height="93" data-is-safeframe="true" sandbox="allow-forms allow-pointer-lock allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts allow-top-navigation-by-user-activation" data-google-container-id="2" style="border: 0px; vertical-align: bottom; min-width: 100%; min-height: 93px;" data-ur-xdomain="true" data-ur-indexed="true" data-ur-fpath="8" data-ur-ptoken="1d541bd718f73195" data-ur-rtimebase="1598889906918" data-load-complete="true"></iframe>
  (Session info: chrome=84.0.4147.135)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'LAPTOP-6QSDTELI', ip: '192.168.1.185', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.8'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 84.0.4147.135, chrome: {chromedriverVersion: 84.0.4147.30 (48b3e868b4cc0..., userDataDir: C:\Users\lenis\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:57980}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}
Session ID: 3ab83e82add89d8f878a586a1b753307
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:285)
at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:84)
at jdk.internal.reflect.GeneratedMethodAccessor27.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:51)
at com.sun.proxy.$Proxy14.click(Unknown Source)
at readyforschool.SchoolHomePage.pencilsPageLanded(SchoolHomePage.java:97)
at readyforschooltest.SchoolHomePageTest.testPencilsPageLanded(SchoolHomePageTest.java:44)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.ElementClickInterceptedException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPencilsPageLanded -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:readyforschooltest.SchoolHomePageTest@1e6454ec]" started-at="2020-08-31T12:05:14 EDT" name="afterEachTestMethod" finished-at="2020-08-31T12:05:15 EDT" duration-ms="1233" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testPencilsPageLanded status=FAILURE method=SchoolHomePageTest.testPencilsPageLanded()[pri:0, instance:readyforschooltest.SchoolHomePageTest@1e6454ec] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:readyforschooltest.SchoolHomePageTest@1e6454ec]" started-at="2020-08-31T12:05:15 EDT" name="cleanUp" finished-at="2020-08-31T12:05:15 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:readyforschooltest.SchoolHomePageTest@1e6454ec]" started-at="2020-08-31T12:05:15 EDT" name="setUp" finished-at="2020-08-31T12:05:20 EDT" duration-ms="5115" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[84]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.target.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:readyforschooltest.SchoolHomePageTest@1e6454ec]" started-at="2020-08-31T12:05:20 EDT" name="startExtent" finished-at="2020-08-31T12:05:20 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void readyforschooltest.SchoolHomePageTest.testPensPageLanded() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:readyforschooltest.SchoolHomePageTest@1e6454ec]" started-at="2020-08-31T12:05:20 EDT" name="getInit" finished-at="2020-08-31T12:05:20 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method signature="testPensPageLanded()[pri:0, instance:readyforschooltest.SchoolHomePageTest@1e6454ec]" started-at="2020-08-31T12:05:20 EDT" name="testPensPageLanded" finished-at="2020-08-31T12:05:30 EDT" duration-ms="10174" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPensPageLanded -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:readyforschooltest.SchoolHomePageTest@1e6454ec]" started-at="2020-08-31T12:05:30 EDT" name="afterEachTestMethod" finished-at="2020-08-31T12:05:31 EDT" duration-ms="757" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testPensPageLanded status=SUCCESS method=SchoolHomePageTest.testPensPageLanded()[pri:0, instance:readyforschooltest.SchoolHomePageTest@1e6454ec] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:readyforschooltest.SchoolHomePageTest@1e6454ec]" started-at="2020-08-31T12:05:31 EDT" name="cleanUp" finished-at="2020-08-31T12:05:31 EDT" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:readyforschooltest.SchoolHomePageTest@1e6454ec]" started-at="2020-08-31T12:05:31 EDT" name="setUp" finished-at="2020-08-31T12:05:37 EDT" duration-ms="5599" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[84]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.target.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:readyforschooltest.SchoolHomePageTest@1e6454ec]" started-at="2020-08-31T12:05:37 EDT" name="startExtent" finished-at="2020-08-31T12:05:37 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void readyforschooltest.SchoolHomePageTest.testSchoolreadyPageLanded() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:readyforschooltest.SchoolHomePageTest@1e6454ec]" started-at="2020-08-31T12:05:37 EDT" name="getInit" finished-at="2020-08-31T12:05:37 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method signature="testSchoolreadyPageLanded()[pri:0, instance:readyforschooltest.SchoolHomePageTest@1e6454ec]" started-at="2020-08-31T12:05:37 EDT" name="testSchoolreadyPageLanded" finished-at="2020-08-31T12:05:40 EDT" duration-ms="3637" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSchoolreadyPageLanded -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:readyforschooltest.SchoolHomePageTest@1e6454ec]" started-at="2020-08-31T12:05:40 EDT" name="afterEachTestMethod" finished-at="2020-08-31T12:05:41 EDT" duration-ms="711" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testSchoolreadyPageLanded status=SUCCESS method=SchoolHomePageTest.testSchoolreadyPageLanded()[pri:0, instance:readyforschooltest.SchoolHomePageTest@1e6454ec] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:readyforschooltest.SchoolHomePageTest@1e6454ec]" started-at="2020-08-31T12:05:41 EDT" name="cleanUp" finished-at="2020-08-31T12:05:41 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
      </class> <!-- readyforschooltest.SchoolHomePageTest -->
      <class name="testhome.HomePageTest">
        <test-method is-config="true" signature="extentSetup(org.testng.ITestContext)[pri:0, instance:testhome.HomePageTest@66498326]" started-at="2020-08-31T11:59:40 EDT" name="extentSetup" finished-at="2020-08-31T11:59:40 EDT" duration-ms="201" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@76eadc5a]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Extent Report DirectoryC:\Users\lenis\IdeaProjects\WebAutomationFrameWorkSelenium_Team2\TargetEcommerce\target\surefire-reports\html]]>
            </line>
          </reporter-output>
        </test-method> <!-- extentSetup -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testhome.HomePageTest@66498326]" started-at="2020-08-31T11:59:40 EDT" name="setUp" finished-at="2020-08-31T11:59:46 EDT" duration-ms="5952" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[84]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.target.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testhome.HomePageTest@66498326]" started-at="2020-08-31T11:59:46 EDT" name="startExtent" finished-at="2020-08-31T11:59:46 EDT" duration-ms="7" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testhome.HomePageTest.testCheckEmailButton() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:testhome.HomePageTest@66498326]" started-at="2020-08-31T11:59:46 EDT" name="getInit" finished-at="2020-08-31T11:59:46 EDT" duration-ms="44" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method signature="testCheckEmailButton()[pri:0, instance:testhome.HomePageTest@66498326]" started-at="2020-08-31T11:59:46 EDT" name="testCheckEmailButton" finished-at="2020-08-31T11:59:54 EDT" duration-ms="7533" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCheckEmailButton -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testhome.HomePageTest@66498326]" started-at="2020-08-31T11:59:54 EDT" name="afterEachTestMethod" finished-at="2020-08-31T11:59:55 EDT" duration-ms="1189" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testCheckEmailButton status=SUCCESS method=HomePageTest.testCheckEmailButton()[pri:0, instance:testhome.HomePageTest@66498326] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:testhome.HomePageTest@66498326]" started-at="2020-08-31T11:59:55 EDT" name="cleanUp" finished-at="2020-08-31T11:59:55 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testhome.HomePageTest@66498326]" started-at="2020-08-31T11:59:55 EDT" name="setUp" finished-at="2020-08-31T12:00:00 EDT" duration-ms="5283" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[84]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.target.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testhome.HomePageTest@66498326]" started-at="2020-08-31T12:00:00 EDT" name="startExtent" finished-at="2020-08-31T12:00:00 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testhome.HomePageTest.testCheckYourBalance() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:testhome.HomePageTest@66498326]" started-at="2020-08-31T12:00:00 EDT" name="getInit" finished-at="2020-08-31T12:00:00 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method signature="testCheckYourBalance()[pri:0, instance:testhome.HomePageTest@66498326]" started-at="2020-08-31T12:00:00 EDT" name="testCheckYourBalance" finished-at="2020-08-31T12:00:09 EDT" duration-ms="8970" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCheckYourBalance -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testhome.HomePageTest@66498326]" started-at="2020-08-31T12:00:09 EDT" name="afterEachTestMethod" finished-at="2020-08-31T12:00:10 EDT" duration-ms="918" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testCheckYourBalance status=SUCCESS method=HomePageTest.testCheckYourBalance()[pri:0, instance:testhome.HomePageTest@66498326] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:testhome.HomePageTest@66498326]" started-at="2020-08-31T12:00:10 EDT" name="cleanUp" finished-at="2020-08-31T12:00:10 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testhome.HomePageTest@66498326]" started-at="2020-08-31T12:00:10 EDT" name="setUp" finished-at="2020-08-31T12:00:16 EDT" duration-ms="5740" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[84]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.target.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testhome.HomePageTest@66498326]" started-at="2020-08-31T12:00:16 EDT" name="startExtent" finished-at="2020-08-31T12:00:16 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testhome.HomePageTest.testClearanceImage() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="testClearanceImage()[pri:0, instance:testhome.HomePageTest@66498326]" started-at="2020-08-31T12:00:16 EDT" name="testClearanceImage" finished-at="2020-08-31T12:00:29 EDT" duration-ms="13075" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//li[24]//a[1]//div[1]//div[1]//div[1]//picture[1]//img[1]"}
  (Session info: chrome=84.0.4147.135)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'LAPTOP-6QSDTELI', ip: '192.168.1.185', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.8'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 84.0.4147.135, chrome: {chromedriverVersion: 84.0.4147.30 (48b3e868b4cc0..., userDataDir: C:\Users\lenis\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:56812}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}
Session ID: a0955d1b3a80ac345a66160531a961fb
*** Element info: {Using=xpath, value=//li[24]//a[1]//div[1]//div[1]//div[1]//picture[1]//img[1]}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//li[24]//a[1]//div[1]//div[1]//div[1]//picture[1]//img[1]"}
  (Session info: chrome=84.0.4147.135)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'LAPTOP-6QSDTELI', ip: '192.168.1.185', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.8'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 84.0.4147.135, chrome: {chromedriverVersion: 84.0.4147.30 (48b3e868b4cc0..., userDataDir: C:\Users\lenis\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:56812}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}
Session ID: a0955d1b3a80ac345a66160531a961fb
*** Element info: {Using=xpath, value=//li[24]//a[1]//div[1]//div[1]//div[1]//picture[1]//img[1]}
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:428)
at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at com.sun.proxy.$Proxy14.click(Unknown Source)
at home.HomePage.clearanceImage(HomePage.java:74)
at testhome.HomePageTest.testClearanceImage(HomePageTest.java:37)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClearanceImage -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:testhome.HomePageTest@66498326]" started-at="2020-08-31T12:00:16 EDT" name="getInit" finished-at="2020-08-31T12:00:16 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testhome.HomePageTest@66498326]" started-at="2020-08-31T12:00:29 EDT" name="afterEachTestMethod" finished-at="2020-08-31T12:00:30 EDT" duration-ms="1484" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testClearanceImage status=FAILURE method=HomePageTest.testClearanceImage()[pri:0, instance:testhome.HomePageTest@66498326] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:testhome.HomePageTest@66498326]" started-at="2020-08-31T12:00:30 EDT" name="cleanUp" finished-at="2020-08-31T12:00:30 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testhome.HomePageTest@66498326]" started-at="2020-08-31T12:00:30 EDT" name="setUp" finished-at="2020-08-31T12:00:36 EDT" duration-ms="6032" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[84]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.target.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testhome.HomePageTest@66498326]" started-at="2020-08-31T12:00:36 EDT" name="startExtent" finished-at="2020-08-31T12:00:36 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testhome.HomePageTest.testDisposableMaskIsDisplayed() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:testhome.HomePageTest@66498326]" started-at="2020-08-31T12:00:36 EDT" name="getInit" finished-at="2020-08-31T12:00:36 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method signature="testDisposableMaskIsDisplayed()[pri:0, instance:testhome.HomePageTest@66498326]" started-at="2020-08-31T12:00:36 EDT" name="testDisposableMaskIsDisplayed" finished-at="2020-08-31T12:00:43 EDT" duration-ms="6799" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDisposableMaskIsDisplayed -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testhome.HomePageTest@66498326]" started-at="2020-08-31T12:00:43 EDT" name="afterEachTestMethod" finished-at="2020-08-31T12:00:44 EDT" duration-ms="772" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testDisposableMaskIsDisplayed status=SUCCESS method=HomePageTest.testDisposableMaskIsDisplayed()[pri:0, instance:testhome.HomePageTest@66498326] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:testhome.HomePageTest@66498326]" started-at="2020-08-31T12:00:44 EDT" name="cleanUp" finished-at="2020-08-31T12:00:44 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testhome.HomePageTest@66498326]" started-at="2020-08-31T12:00:44 EDT" name="setUp" finished-at="2020-08-31T12:00:49 EDT" duration-ms="4627" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[84]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.target.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testhome.HomePageTest@66498326]" started-at="2020-08-31T12:00:49 EDT" name="startExtent" finished-at="2020-08-31T12:00:49 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testhome.HomePageTest.testGiftCardPageLanded()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:testhome.HomePageTest@66498326]" started-at="2020-08-31T12:00:49 EDT" name="getInit" finished-at="2020-08-31T12:00:49 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method signature="testGiftCardPageLanded()[pri:0, instance:testhome.HomePageTest@66498326]" started-at="2020-08-31T12:00:49 EDT" name="testGiftCardPageLanded" finished-at="2020-08-31T12:00:49 EDT" duration-ms="852" status="FAIL">
          <exception class="org.openqa.selenium.StaleElementReferenceException">
            <message>
              <![CDATA[stale element reference: element is not attached to the page document
  (Session info: chrome=84.0.4147.135)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/stale_element_reference.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'LAPTOP-6QSDTELI', ip: '192.168.1.185', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.8'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 84.0.4147.135, chrome: {chromedriverVersion: 84.0.4147.30 (48b3e868b4cc0..., userDataDir: C:\Users\lenis\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:56922}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}
Session ID: f5205053bf2440f0f845037e3e94c0bf]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.StaleElementReferenceException: stale element reference: element is not attached to the page document
  (Session info: chrome=84.0.4147.135)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/stale_element_reference.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'LAPTOP-6QSDTELI', ip: '192.168.1.185', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.8'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 84.0.4147.135, chrome: {chromedriverVersion: 84.0.4147.30 (48b3e868b4cc0..., userDataDir: C:\Users\lenis\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:56922}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}
Session ID: f5205053bf2440f0f845037e3e94c0bf
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:285)
at org.openqa.selenium.remote.RemoteWebElement.getText(RemoteWebElement.java:166)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:51)
at com.sun.proxy.$Proxy14.getText(Unknown Source)
at home.HomePage.validateGiftCardPageLanded(HomePage.java:98)
at testhome.HomePageTest.testGiftCardPageLanded(HomePageTest.java:47)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.StaleElementReferenceException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGiftCardPageLanded -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testhome.HomePageTest@66498326]" started-at="2020-08-31T12:00:49 EDT" name="afterEachTestMethod" finished-at="2020-08-31T12:00:52 EDT" duration-ms="3057" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testGiftCardPageLanded status=FAILURE method=HomePageTest.testGiftCardPageLanded()[pri:0, instance:testhome.HomePageTest@66498326] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:testhome.HomePageTest@66498326]" started-at="2020-08-31T12:00:52 EDT" name="cleanUp" finished-at="2020-08-31T12:00:52 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testhome.HomePageTest@66498326]" started-at="2020-08-31T12:00:52 EDT" name="setUp" finished-at="2020-08-31T12:00:58 EDT" duration-ms="5558" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[84]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.target.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testhome.HomePageTest@66498326]" started-at="2020-08-31T12:00:58 EDT" name="startExtent" finished-at="2020-08-31T12:00:58 EDT" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testhome.HomePageTest.testSearchBoxCheck() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:testhome.HomePageTest@66498326]" started-at="2020-08-31T12:00:58 EDT" name="getInit" finished-at="2020-08-31T12:00:58 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method signature="testSearchBoxCheck()[pri:0, instance:testhome.HomePageTest@66498326]" started-at="2020-08-31T12:00:58 EDT" name="testSearchBoxCheck" finished-at="2020-08-31T12:01:02 EDT" duration-ms="3731" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSearchBoxCheck -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testhome.HomePageTest@66498326]" started-at="2020-08-31T12:01:02 EDT" name="afterEachTestMethod" finished-at="2020-08-31T12:01:03 EDT" duration-ms="983" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testSearchBoxCheck status=SUCCESS method=HomePageTest.testSearchBoxCheck()[pri:0, instance:testhome.HomePageTest@66498326] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:testhome.HomePageTest@66498326]" started-at="2020-08-31T12:01:03 EDT" name="cleanUp" finished-at="2020-08-31T12:01:03 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testhome.HomePageTest@66498326]" started-at="2020-08-31T12:01:03 EDT" name="setUp" finished-at="2020-08-31T12:01:08 EDT" duration-ms="4827" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[84]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.target.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testhome.HomePageTest@66498326]" started-at="2020-08-31T12:01:08 EDT" name="startExtent" finished-at="2020-08-31T12:01:08 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testhome.HomePageTest.testSearchBoxIsDisplayed()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:testhome.HomePageTest@66498326]" started-at="2020-08-31T12:01:08 EDT" name="getInit" finished-at="2020-08-31T12:01:08 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method signature="testSearchBoxIsDisplayed()[pri:0, instance:testhome.HomePageTest@66498326]" started-at="2020-08-31T12:01:08 EDT" name="testSearchBoxIsDisplayed" finished-at="2020-08-31T12:01:08 EDT" duration-ms="590" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSearchBoxIsDisplayed -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testhome.HomePageTest@66498326]" started-at="2020-08-31T12:01:08 EDT" name="afterEachTestMethod" finished-at="2020-08-31T12:01:09 EDT" duration-ms="683" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testSearchBoxIsDisplayed status=SUCCESS method=HomePageTest.testSearchBoxIsDisplayed()[pri:0, instance:testhome.HomePageTest@66498326] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:testhome.HomePageTest@66498326]" started-at="2020-08-31T12:01:09 EDT" name="cleanUp" finished-at="2020-08-31T12:01:09 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testhome.HomePageTest@66498326]" started-at="2020-08-31T12:01:09 EDT" name="setUp" finished-at="2020-08-31T12:01:15 EDT" duration-ms="5720" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[84]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.target.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testhome.HomePageTest@66498326]" started-at="2020-08-31T12:01:15 EDT" name="startExtent" finished-at="2020-08-31T12:01:15 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testhome.HomePageTest.testTargetLogoIsDisplayed()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:testhome.HomePageTest@66498326]" started-at="2020-08-31T12:01:15 EDT" name="getInit" finished-at="2020-08-31T12:01:15 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method signature="testTargetLogoIsDisplayed()[pri:0, instance:testhome.HomePageTest@66498326]" started-at="2020-08-31T12:01:15 EDT" name="testTargetLogoIsDisplayed" finished-at="2020-08-31T12:01:15 EDT" duration-ms="93" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTargetLogoIsDisplayed -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testhome.HomePageTest@66498326]" started-at="2020-08-31T12:01:15 EDT" name="afterEachTestMethod" finished-at="2020-08-31T12:01:15 EDT" duration-ms="732" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testTargetLogoIsDisplayed status=SUCCESS method=HomePageTest.testTargetLogoIsDisplayed()[pri:0, instance:testhome.HomePageTest@66498326] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:testhome.HomePageTest@66498326]" started-at="2020-08-31T12:01:15 EDT" name="cleanUp" finished-at="2020-08-31T12:01:15 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testhome.HomePageTest@66498326]" started-at="2020-08-31T12:01:15 EDT" name="setUp" finished-at="2020-08-31T12:01:21 EDT" duration-ms="5243" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[84]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.target.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testhome.HomePageTest@66498326]" started-at="2020-08-31T12:01:21 EDT" name="startExtent" finished-at="2020-08-31T12:01:21 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testhome.HomePageTest.testWeeklyAdClickable()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:testhome.HomePageTest@66498326]" started-at="2020-08-31T12:01:21 EDT" name="getInit" finished-at="2020-08-31T12:01:21 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method signature="testWeeklyAdClickable()[pri:0, instance:testhome.HomePageTest@66498326]" started-at="2020-08-31T12:01:21 EDT" name="testWeeklyAdClickable" finished-at="2020-08-31T12:01:22 EDT" duration-ms="1318" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWeeklyAdClickable -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testhome.HomePageTest@66498326]" started-at="2020-08-31T12:01:22 EDT" name="afterEachTestMethod" finished-at="2020-08-31T12:01:23 EDT" duration-ms="740" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testWeeklyAdClickable status=SUCCESS method=HomePageTest.testWeeklyAdClickable()[pri:0, instance:testhome.HomePageTest@66498326] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testhome.HomePageTest@66498326]" started-at="2020-08-31T12:01:23 EDT" name="setUp" finished-at="2020-08-31T12:01:28 EDT" duration-ms="5808" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[84]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.target.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:testhome.HomePageTest@66498326]" started-at="2020-08-31T12:01:23 EDT" name="cleanUp" finished-at="2020-08-31T12:01:23 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testhome.HomePageTest@66498326]" started-at="2020-08-31T12:01:28 EDT" name="startExtent" finished-at="2020-08-31T12:01:28 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testhome.HomePageTest.testcheckMailButton() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:testhome.HomePageTest@66498326]" started-at="2020-08-31T12:01:28 EDT" name="getInit" finished-at="2020-08-31T12:01:28 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method signature="testcheckMailButton()[pri:0, instance:testhome.HomePageTest@66498326]" started-at="2020-08-31T12:01:28 EDT" name="testcheckMailButton" finished-at="2020-08-31T12:01:37 EDT" duration-ms="8342" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testcheckMailButton -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testhome.HomePageTest@66498326]" started-at="2020-08-31T12:01:37 EDT" name="afterEachTestMethod" finished-at="2020-08-31T12:01:38 EDT" duration-ms="729" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testcheckMailButton status=SUCCESS method=HomePageTest.testcheckMailButton()[pri:0, instance:testhome.HomePageTest@66498326] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:testhome.HomePageTest@66498326]" started-at="2020-08-31T12:01:38 EDT" name="cleanUp" finished-at="2020-08-31T12:01:38 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="generateReport()[pri:0, instance:testhome.HomePageTest@66498326]" started-at="2020-08-31T12:09:13 EDT" name="generateReport" finished-at="2020-08-31T12:09:13 EDT" duration-ms="16" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateReport -->
      </class> <!-- testhome.HomePageTest -->
    </test> <!-- Target Home -->
  </suite> <!-- TestSuite -->
</testng-results>
