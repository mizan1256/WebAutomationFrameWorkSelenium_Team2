<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="11" passed="11" failed="0" skipped="0">
  <reporter-output>
    <line>
      <![CDATA[Extent Report Directory/Users/syedhussain/IdeaProjects/WebAutomationFrameWorkSelenium_Team2/TargetEcommerce/target/surefire-reports/html]]>
    </line>
  </reporter-output>
  <suite started-at="2020-09-02T03:40:15 EDT" name="TestSuite" finished-at="2020-09-02T03:42:14 EDT" duration-ms="118617">
    <groups>
    </groups>
    <test started-at="2020-09-02T03:40:15 EDT" name="Target Home" finished-at="2020-09-02T03:42:14 EDT" duration-ms="118617">
      <class name="testhome.HomePageTest">
        <test-method is-config="true" signature="extentSetup(org.testng.ITestContext)[pri:0, instance:testhome.HomePageTest@683dbc2c]" started-at="2020-09-02T03:40:15 EDT" name="extentSetup" finished-at="2020-09-02T03:40:15 EDT" duration-ms="449" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@6a916402]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Extent Report Directory/Users/syedhussain/IdeaProjects/WebAutomationFrameWorkSelenium_Team2/TargetEcommerce/target/surefire-reports/html]]>
            </line>
          </reporter-output>
        </test-method> <!-- extentSetup -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testhome.HomePageTest@683dbc2c]" started-at="2020-09-02T03:40:15 EDT" name="setUp" finished-at="2020-09-02T03:40:22 EDT" duration-ms="7221" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[85]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.target.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testhome.HomePageTest@683dbc2c]" started-at="2020-09-02T03:40:22 EDT" name="startExtent" finished-at="2020-09-02T03:40:22 EDT" duration-ms="5" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testhome.HomePageTest.testForgotPasswordPageIsDisplayed()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:testhome.HomePageTest@683dbc2c]" started-at="2020-09-02T03:40:22 EDT" name="getInit" finished-at="2020-09-02T03:40:22 EDT" duration-ms="22" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method signature="testForgotPasswordPageIsDisplayed()[pri:0, instance:testhome.HomePageTest@683dbc2c]" started-at="2020-09-02T03:40:22 EDT" name="testForgotPasswordPageIsDisplayed" finished-at="2020-09-02T03:40:30 EDT" duration-ms="7524" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testForgotPasswordPageIsDisplayed -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testhome.HomePageTest@683dbc2c]" started-at="2020-09-02T03:40:30 EDT" name="afterEachTestMethod" finished-at="2020-09-02T03:40:30 EDT" duration-ms="405" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testForgotPasswordPageIsDisplayed status=SUCCESS method=HomePageTest.testForgotPasswordPageIsDisplayed()[pri:0, instance:testhome.HomePageTest@683dbc2c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:testhome.HomePageTest@683dbc2c]" started-at="2020-09-02T03:40:30 EDT" name="cleanUp" finished-at="2020-09-02T03:40:30 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testhome.HomePageTest@683dbc2c]" started-at="2020-09-02T03:40:30 EDT" name="setUp" finished-at="2020-09-02T03:40:34 EDT" duration-ms="4118" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[85]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.target.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testhome.HomePageTest@683dbc2c]" started-at="2020-09-02T03:40:34 EDT" name="startExtent" finished-at="2020-09-02T03:40:34 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testhome.HomePageTest.testLocationWithCityName()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:testhome.HomePageTest@683dbc2c]" started-at="2020-09-02T03:40:34 EDT" name="getInit" finished-at="2020-09-02T03:40:34 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method signature="testLocationWithCityName()[pri:0, instance:testhome.HomePageTest@683dbc2c]" started-at="2020-09-02T03:40:34 EDT" name="testLocationWithCityName" finished-at="2020-09-02T03:40:39 EDT" duration-ms="4797" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLocationWithCityName -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testhome.HomePageTest@683dbc2c]" started-at="2020-09-02T03:40:39 EDT" name="afterEachTestMethod" finished-at="2020-09-02T03:40:39 EDT" duration-ms="175" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testLocationWithCityName status=SUCCESS method=HomePageTest.testLocationWithCityName()[pri:0, instance:testhome.HomePageTest@683dbc2c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:testhome.HomePageTest@683dbc2c]" started-at="2020-09-02T03:40:39 EDT" name="cleanUp" finished-at="2020-09-02T03:40:39 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testhome.HomePageTest@683dbc2c]" started-at="2020-09-02T03:40:39 EDT" name="setUp" finished-at="2020-09-02T03:40:44 EDT" duration-ms="4888" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[85]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.target.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testhome.HomePageTest@683dbc2c]" started-at="2020-09-02T03:40:44 EDT" name="startExtent" finished-at="2020-09-02T03:40:44 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testhome.HomePageTest.testLocationWithStateName()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:testhome.HomePageTest@683dbc2c]" started-at="2020-09-02T03:40:44 EDT" name="getInit" finished-at="2020-09-02T03:40:44 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method signature="testLocationWithStateName()[pri:0, instance:testhome.HomePageTest@683dbc2c]" started-at="2020-09-02T03:40:44 EDT" name="testLocationWithStateName" finished-at="2020-09-02T03:40:49 EDT" duration-ms="4660" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLocationWithStateName -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testhome.HomePageTest@683dbc2c]" started-at="2020-09-02T03:40:49 EDT" name="afterEachTestMethod" finished-at="2020-09-02T03:40:49 EDT" duration-ms="165" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testLocationWithStateName status=SUCCESS method=HomePageTest.testLocationWithStateName()[pri:0, instance:testhome.HomePageTest@683dbc2c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:testhome.HomePageTest@683dbc2c]" started-at="2020-09-02T03:40:49 EDT" name="cleanUp" finished-at="2020-09-02T03:40:49 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testhome.HomePageTest@683dbc2c]" started-at="2020-09-02T03:40:49 EDT" name="setUp" finished-at="2020-09-02T03:40:55 EDT" duration-ms="5850" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[85]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.target.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testhome.HomePageTest@683dbc2c]" started-at="2020-09-02T03:40:55 EDT" name="startExtent" finished-at="2020-09-02T03:40:55 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testhome.HomePageTest.testLocationWithZipCode()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:testhome.HomePageTest@683dbc2c]" started-at="2020-09-02T03:40:55 EDT" name="getInit" finished-at="2020-09-02T03:40:55 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method signature="testLocationWithZipCode()[pri:0, instance:testhome.HomePageTest@683dbc2c]" started-at="2020-09-02T03:40:55 EDT" name="testLocationWithZipCode" finished-at="2020-09-02T03:40:59 EDT" duration-ms="4618" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLocationWithZipCode -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testhome.HomePageTest@683dbc2c]" started-at="2020-09-02T03:40:59 EDT" name="afterEachTestMethod" finished-at="2020-09-02T03:41:00 EDT" duration-ms="174" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testLocationWithZipCode status=SUCCESS method=HomePageTest.testLocationWithZipCode()[pri:0, instance:testhome.HomePageTest@683dbc2c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:testhome.HomePageTest@683dbc2c]" started-at="2020-09-02T03:41:00 EDT" name="cleanUp" finished-at="2020-09-02T03:41:00 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testhome.HomePageTest@683dbc2c]" started-at="2020-09-02T03:41:00 EDT" name="setUp" finished-at="2020-09-02T03:41:05 EDT" duration-ms="4910" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[85]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.target.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testhome.HomePageTest@683dbc2c]" started-at="2020-09-02T03:41:05 EDT" name="startExtent" finished-at="2020-09-02T03:41:05 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testhome.HomePageTest.testLoginPageIsDisplayed()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:testhome.HomePageTest@683dbc2c]" started-at="2020-09-02T03:41:05 EDT" name="getInit" finished-at="2020-09-02T03:41:05 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method signature="testLoginPageIsDisplayed()[pri:0, instance:testhome.HomePageTest@683dbc2c]" started-at="2020-09-02T03:41:05 EDT" name="testLoginPageIsDisplayed" finished-at="2020-09-02T03:41:10 EDT" duration-ms="5348" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoginPageIsDisplayed -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testhome.HomePageTest@683dbc2c]" started-at="2020-09-02T03:41:10 EDT" name="afterEachTestMethod" finished-at="2020-09-02T03:41:10 EDT" duration-ms="158" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testLoginPageIsDisplayed status=SUCCESS method=HomePageTest.testLoginPageIsDisplayed()[pri:0, instance:testhome.HomePageTest@683dbc2c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:testhome.HomePageTest@683dbc2c]" started-at="2020-09-02T03:41:10 EDT" name="cleanUp" finished-at="2020-09-02T03:41:10 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testhome.HomePageTest@683dbc2c]" started-at="2020-09-02T03:41:10 EDT" name="setUp" finished-at="2020-09-02T03:41:13 EDT" duration-ms="2544" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[85]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.target.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testhome.HomePageTest@683dbc2c]" started-at="2020-09-02T03:41:13 EDT" name="startExtent" finished-at="2020-09-02T03:41:13 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testhome.HomePageTest.testLoginWithInvalidEmail()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:testhome.HomePageTest@683dbc2c]" started-at="2020-09-02T03:41:13 EDT" name="getInit" finished-at="2020-09-02T03:41:13 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method signature="testLoginWithInvalidEmail()[pri:0, instance:testhome.HomePageTest@683dbc2c]" started-at="2020-09-02T03:41:13 EDT" name="testLoginWithInvalidEmail" finished-at="2020-09-02T03:41:19 EDT" duration-ms="6491" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoginWithInvalidEmail -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testhome.HomePageTest@683dbc2c]" started-at="2020-09-02T03:41:19 EDT" name="afterEachTestMethod" finished-at="2020-09-02T03:41:19 EDT" duration-ms="164" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testLoginWithInvalidEmail status=SUCCESS method=HomePageTest.testLoginWithInvalidEmail()[pri:0, instance:testhome.HomePageTest@683dbc2c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:testhome.HomePageTest@683dbc2c]" started-at="2020-09-02T03:41:19 EDT" name="cleanUp" finished-at="2020-09-02T03:41:19 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testhome.HomePageTest@683dbc2c]" started-at="2020-09-02T03:41:19 EDT" name="setUp" finished-at="2020-09-02T03:41:24 EDT" duration-ms="4392" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[85]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.target.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testhome.HomePageTest@683dbc2c]" started-at="2020-09-02T03:41:24 EDT" name="startExtent" finished-at="2020-09-02T03:41:24 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testhome.HomePageTest.testLoginWithInvalidEmailAndPassword()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:testhome.HomePageTest@683dbc2c]" started-at="2020-09-02T03:41:24 EDT" name="getInit" finished-at="2020-09-02T03:41:24 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method signature="testLoginWithInvalidEmailAndPassword()[pri:0, instance:testhome.HomePageTest@683dbc2c]" started-at="2020-09-02T03:41:24 EDT" name="testLoginWithInvalidEmailAndPassword" finished-at="2020-09-02T03:41:34 EDT" duration-ms="10564" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoginWithInvalidEmailAndPassword -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testhome.HomePageTest@683dbc2c]" started-at="2020-09-02T03:41:34 EDT" name="afterEachTestMethod" finished-at="2020-09-02T03:41:34 EDT" duration-ms="174" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testLoginWithInvalidEmailAndPassword status=SUCCESS method=HomePageTest.testLoginWithInvalidEmailAndPassword()[pri:0, instance:testhome.HomePageTest@683dbc2c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:testhome.HomePageTest@683dbc2c]" started-at="2020-09-02T03:41:34 EDT" name="cleanUp" finished-at="2020-09-02T03:41:34 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testhome.HomePageTest@683dbc2c]" started-at="2020-09-02T03:41:34 EDT" name="setUp" finished-at="2020-09-02T03:41:41 EDT" duration-ms="6406" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[85]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.target.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:testhome.HomePageTest@683dbc2c]" started-at="2020-09-02T03:41:41 EDT" name="getInit" finished-at="2020-09-02T03:41:41 EDT" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testhome.HomePageTest@683dbc2c]" started-at="2020-09-02T03:41:41 EDT" name="startExtent" finished-at="2020-09-02T03:41:41 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testhome.HomePageTest.testLoginWithInvalidPassword()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="testLoginWithInvalidPassword()[pri:0, instance:testhome.HomePageTest@683dbc2c]" started-at="2020-09-02T03:41:41 EDT" name="testLoginWithInvalidPassword" finished-at="2020-09-02T03:41:46 EDT" duration-ms="5649" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoginWithInvalidPassword -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testhome.HomePageTest@683dbc2c]" started-at="2020-09-02T03:41:46 EDT" name="afterEachTestMethod" finished-at="2020-09-02T03:41:47 EDT" duration-ms="204" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testLoginWithInvalidPassword status=SUCCESS method=HomePageTest.testLoginWithInvalidPassword()[pri:0, instance:testhome.HomePageTest@683dbc2c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:testhome.HomePageTest@683dbc2c]" started-at="2020-09-02T03:41:47 EDT" name="cleanUp" finished-at="2020-09-02T03:41:47 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testhome.HomePageTest@683dbc2c]" started-at="2020-09-02T03:41:47 EDT" name="setUp" finished-at="2020-09-02T03:41:51 EDT" duration-ms="4409" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[85]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.target.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testhome.HomePageTest@683dbc2c]" started-at="2020-09-02T03:41:51 EDT" name="startExtent" finished-at="2020-09-02T03:41:51 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testhome.HomePageTest.testLookupStoreWithInvalidLocationInput()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:testhome.HomePageTest@683dbc2c]" started-at="2020-09-02T03:41:51 EDT" name="getInit" finished-at="2020-09-02T03:41:51 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method signature="testLookupStoreWithInvalidLocationInput()[pri:0, instance:testhome.HomePageTest@683dbc2c]" started-at="2020-09-02T03:41:51 EDT" name="testLookupStoreWithInvalidLocationInput" finished-at="2020-09-02T03:41:56 EDT" duration-ms="4722" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLookupStoreWithInvalidLocationInput -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testhome.HomePageTest@683dbc2c]" started-at="2020-09-02T03:41:56 EDT" name="afterEachTestMethod" finished-at="2020-09-02T03:41:56 EDT" duration-ms="155" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testLookupStoreWithInvalidLocationInput status=SUCCESS method=HomePageTest.testLookupStoreWithInvalidLocationInput()[pri:0, instance:testhome.HomePageTest@683dbc2c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testhome.HomePageTest@683dbc2c]" started-at="2020-09-02T03:41:56 EDT" name="setUp" finished-at="2020-09-02T03:42:01 EDT" duration-ms="4752" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[85]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.target.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:testhome.HomePageTest@683dbc2c]" started-at="2020-09-02T03:41:56 EDT" name="cleanUp" finished-at="2020-09-02T03:41:56 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testhome.HomePageTest@683dbc2c]" started-at="2020-09-02T03:42:01 EDT" name="startExtent" finished-at="2020-09-02T03:42:01 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testhome.HomePageTest.testResetPasswordWithInvalidEmail()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:testhome.HomePageTest@683dbc2c]" started-at="2020-09-02T03:42:01 EDT" name="getInit" finished-at="2020-09-02T03:42:01 EDT" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method signature="testResetPasswordWithInvalidEmail()[pri:0, instance:testhome.HomePageTest@683dbc2c]" started-at="2020-09-02T03:42:01 EDT" name="testResetPasswordWithInvalidEmail" finished-at="2020-09-02T03:42:07 EDT" duration-ms="5888" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testResetPasswordWithInvalidEmail -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testhome.HomePageTest@683dbc2c]" started-at="2020-09-02T03:42:07 EDT" name="afterEachTestMethod" finished-at="2020-09-02T03:42:07 EDT" duration-ms="193" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testResetPasswordWithInvalidEmail status=SUCCESS method=HomePageTest.testResetPasswordWithInvalidEmail()[pri:0, instance:testhome.HomePageTest@683dbc2c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:testhome.HomePageTest@683dbc2c]" started-at="2020-09-02T03:42:07 EDT" name="cleanUp" finished-at="2020-09-02T03:42:07 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testhome.HomePageTest@683dbc2c]" started-at="2020-09-02T03:42:07 EDT" name="setUp" finished-at="2020-09-02T03:42:11 EDT" duration-ms="4405" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[85]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.target.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testhome.HomePageTest@683dbc2c]" started-at="2020-09-02T03:42:11 EDT" name="startExtent" finished-at="2020-09-02T03:42:11 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testhome.HomePageTest.testSelectStorePageIsDisplayed()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:testhome.HomePageTest@683dbc2c]" started-at="2020-09-02T03:42:11 EDT" name="getInit" finished-at="2020-09-02T03:42:11 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method signature="testSelectStorePageIsDisplayed()[pri:0, instance:testhome.HomePageTest@683dbc2c]" started-at="2020-09-02T03:42:11 EDT" name="testSelectStorePageIsDisplayed" finished-at="2020-09-02T03:42:13 EDT" duration-ms="2222" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSelectStorePageIsDisplayed -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testhome.HomePageTest@683dbc2c]" started-at="2020-09-02T03:42:13 EDT" name="afterEachTestMethod" finished-at="2020-09-02T03:42:14 EDT" duration-ms="184" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testSelectStorePageIsDisplayed status=SUCCESS method=HomePageTest.testSelectStorePageIsDisplayed()[pri:0, instance:testhome.HomePageTest@683dbc2c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:testhome.HomePageTest@683dbc2c]" started-at="2020-09-02T03:42:14 EDT" name="cleanUp" finished-at="2020-09-02T03:42:14 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="generateReport()[pri:0, instance:testhome.HomePageTest@683dbc2c]" started-at="2020-09-02T03:42:14 EDT" name="generateReport" finished-at="2020-09-02T03:42:14 EDT" duration-ms="35" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateReport -->
      </class> <!-- testhome.HomePageTest -->
    </test> <!-- Target Home -->
  </suite> <!-- TestSuite -->
</testng-results>
